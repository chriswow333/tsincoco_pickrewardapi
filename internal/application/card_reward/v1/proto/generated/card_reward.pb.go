// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: card_reward.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{0}
}

func (x *Reply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Reply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{1}
}

func (x *Error) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Error) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CardRewardIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CardRewardIDReq) Reset() {
	*x = CardRewardIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardIDReq) ProtoMessage() {}

func (x *CardRewardIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardIDReq.ProtoReflect.Descriptor instead.
func (*CardRewardIDReq) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{2}
}

func (x *CardRewardIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CardRewardsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply       *Reply                         `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	CardRewards []*CardRewardsReply_CardReward `protobuf:"bytes,2,rep,name=cardRewards,proto3" json:"cardRewards,omitempty"`
}

func (x *CardRewardsReply) Reset() {
	*x = CardRewardsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardsReply) ProtoMessage() {}

func (x *CardRewardsReply) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardsReply.ProtoReflect.Descriptor instead.
func (*CardRewardsReply) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{3}
}

func (x *CardRewardsReply) GetReply() *Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *CardRewardsReply) GetCardRewards() []*CardRewardsReply_CardReward {
	if x != nil {
		return x.CardRewards
	}
	return nil
}

type CardRewardsReply_Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Order int32    `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	Desc  []string `protobuf:"bytes,3,rep,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CardRewardsReply_Description) Reset() {
	*x = CardRewardsReply_Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardsReply_Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardsReply_Description) ProtoMessage() {}

func (x *CardRewardsReply_Description) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardsReply_Description.ProtoReflect.Descriptor instead.
func (*CardRewardsReply_Description) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CardRewardsReply_Description) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardRewardsReply_Description) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CardRewardsReply_Description) GetDesc() []string {
	if x != nil {
		return x.Desc
	}
	return nil
}

type CardRewardsReply_FeedbackType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FeedbackType int32  `protobuf:"varint,3,opt,name=feedbackType,proto3" json:"feedbackType,omitempty"`
	CreateDate   int64  `protobuf:"varint,4,opt,name=createDate,proto3" json:"createDate,omitempty"`
	Updatedate   int64  `protobuf:"varint,5,opt,name=updatedate,proto3" json:"updatedate,omitempty"`
}

func (x *CardRewardsReply_FeedbackType) Reset() {
	*x = CardRewardsReply_FeedbackType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardsReply_FeedbackType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardsReply_FeedbackType) ProtoMessage() {}

func (x *CardRewardsReply_FeedbackType) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardsReply_FeedbackType.ProtoReflect.Descriptor instead.
func (*CardRewardsReply_FeedbackType) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{3, 1}
}

func (x *CardRewardsReply_FeedbackType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CardRewardsReply_FeedbackType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardRewardsReply_FeedbackType) GetFeedbackType() int32 {
	if x != nil {
		return x.FeedbackType
	}
	return 0
}

func (x *CardRewardsReply_FeedbackType) GetCreateDate() int64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

func (x *CardRewardsReply_FeedbackType) GetUpdatedate() int64 {
	if x != nil {
		return x.Updatedate
	}
	return 0
}

type CardRewardsReply_TaskLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Show  int32  `protobuf:"varint,3,opt,name=show,proto3" json:"show,omitempty"`
	Order int32  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *CardRewardsReply_TaskLabel) Reset() {
	*x = CardRewardsReply_TaskLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardsReply_TaskLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardsReply_TaskLabel) ProtoMessage() {}

func (x *CardRewardsReply_TaskLabel) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardsReply_TaskLabel.ProtoReflect.Descriptor instead.
func (*CardRewardsReply_TaskLabel) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{3, 2}
}

func (x *CardRewardsReply_TaskLabel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CardRewardsReply_TaskLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardRewardsReply_TaskLabel) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *CardRewardsReply_TaskLabel) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type CardRewardsReply_CardReward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CardID           string                          `protobuf:"bytes,2,opt,name=cardID,proto3" json:"cardID,omitempty"`
	Name             string                          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Descriptions     []*CardRewardsReply_Description `protobuf:"bytes,4,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
	StartDate        int64                           `protobuf:"varint,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate          int64                           `protobuf:"varint,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CardRewardType   int32                           `protobuf:"varint,7,opt,name=cardRewardType,proto3" json:"cardRewardType,omitempty"`
	FeedbackType     *CardRewardsReply_FeedbackType  `protobuf:"bytes,8,opt,name=feedbackType,proto3" json:"feedbackType,omitempty"`
	TaskLabels       []*CardRewardsReply_TaskLabel   `protobuf:"bytes,9,rep,name=taskLabels,proto3" json:"taskLabels,omitempty"`
	Order            int32                           `protobuf:"varint,10,opt,name=order,proto3" json:"order,omitempty"`
	CardRewardStatus int32                           `protobuf:"varint,11,opt,name=cardRewardStatus,proto3" json:"cardRewardStatus,omitempty"`
	CreateDate       int64                           `protobuf:"varint,12,opt,name=createDate,proto3" json:"createDate,omitempty"`
	UpdateDate       int64                           `protobuf:"varint,13,opt,name=updateDate,proto3" json:"updateDate,omitempty"`
}

func (x *CardRewardsReply_CardReward) Reset() {
	*x = CardRewardsReply_CardReward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_card_reward_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRewardsReply_CardReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRewardsReply_CardReward) ProtoMessage() {}

func (x *CardRewardsReply_CardReward) ProtoReflect() protoreflect.Message {
	mi := &file_card_reward_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRewardsReply_CardReward.ProtoReflect.Descriptor instead.
func (*CardRewardsReply_CardReward) Descriptor() ([]byte, []int) {
	return file_card_reward_proto_rawDescGZIP(), []int{3, 3}
}

func (x *CardRewardsReply_CardReward) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CardRewardsReply_CardReward) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *CardRewardsReply_CardReward) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CardRewardsReply_CardReward) GetDescriptions() []*CardRewardsReply_Description {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

func (x *CardRewardsReply_CardReward) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetCardRewardType() int32 {
	if x != nil {
		return x.CardRewardType
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetFeedbackType() *CardRewardsReply_FeedbackType {
	if x != nil {
		return x.FeedbackType
	}
	return nil
}

func (x *CardRewardsReply_CardReward) GetTaskLabels() []*CardRewardsReply_TaskLabel {
	if x != nil {
		return x.TaskLabels
	}
	return nil
}

func (x *CardRewardsReply_CardReward) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetCardRewardStatus() int32 {
	if x != nil {
		return x.CardRewardStatus
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetCreateDate() int64 {
	if x != nil {
		return x.CreateDate
	}
	return 0
}

func (x *CardRewardsReply_CardReward) GetUpdateDate() int64 {
	if x != nil {
		return x.UpdateDate
	}
	return 0
}

var File_card_reward_proto protoreflect.FileDescriptor

var file_card_reward_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x22, 0x4c, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x49, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xed, 0x07, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4d, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x1a, 0x4b, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x1a, 0x96, 0x01,
	0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x59, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x9b, 0x04, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0c,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51,
	0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x32,
	0x6d, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x56, 0x31, 0x12,
	0x5d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x42, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x2e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x30,
	0x5a, 0x2e, 0x70, 0x69, 0x63, 0x6b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x61, 0x70, 0x69, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_card_reward_proto_rawDescOnce sync.Once
	file_card_reward_proto_rawDescData = file_card_reward_proto_rawDesc
)

func file_card_reward_proto_rawDescGZIP() []byte {
	file_card_reward_proto_rawDescOnce.Do(func() {
		file_card_reward_proto_rawDescData = protoimpl.X.CompressGZIP(file_card_reward_proto_rawDescData)
	})
	return file_card_reward_proto_rawDescData
}

var file_card_reward_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_card_reward_proto_goTypes = []interface{}{
	(*Reply)(nil),                         // 0: card.reward.v1.Reply
	(*Error)(nil),                         // 1: card.reward.v1.Error
	(*CardRewardIDReq)(nil),               // 2: card.reward.v1.CardRewardIDReq
	(*CardRewardsReply)(nil),              // 3: card.reward.v1.CardRewardsReply
	(*CardRewardsReply_Description)(nil),  // 4: card.reward.v1.CardRewardsReply.Description
	(*CardRewardsReply_FeedbackType)(nil), // 5: card.reward.v1.CardRewardsReply.FeedbackType
	(*CardRewardsReply_TaskLabel)(nil),    // 6: card.reward.v1.CardRewardsReply.TaskLabel
	(*CardRewardsReply_CardReward)(nil),   // 7: card.reward.v1.CardRewardsReply.CardReward
}
var file_card_reward_proto_depIdxs = []int32{
	1, // 0: card.reward.v1.Reply.error:type_name -> card.reward.v1.Error
	0, // 1: card.reward.v1.CardRewardsReply.reply:type_name -> card.reward.v1.Reply
	7, // 2: card.reward.v1.CardRewardsReply.cardRewards:type_name -> card.reward.v1.CardRewardsReply.CardReward
	4, // 3: card.reward.v1.CardRewardsReply.CardReward.descriptions:type_name -> card.reward.v1.CardRewardsReply.Description
	5, // 4: card.reward.v1.CardRewardsReply.CardReward.feedbackType:type_name -> card.reward.v1.CardRewardsReply.FeedbackType
	6, // 5: card.reward.v1.CardRewardsReply.CardReward.taskLabels:type_name -> card.reward.v1.CardRewardsReply.TaskLabel
	2, // 6: card.reward.v1.CardRewardV1.GetCardRewardsByCardID:input_type -> card.reward.v1.CardRewardIDReq
	3, // 7: card.reward.v1.CardRewardV1.GetCardRewardsByCardID:output_type -> card.reward.v1.CardRewardsReply
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_card_reward_proto_init() }
func file_card_reward_proto_init() {
	if File_card_reward_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_card_reward_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardsReply_Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardsReply_FeedbackType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardsReply_TaskLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_card_reward_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRewardsReply_CardReward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_card_reward_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_card_reward_proto_goTypes,
		DependencyIndexes: file_card_reward_proto_depIdxs,
		MessageInfos:      file_card_reward_proto_msgTypes,
	}.Build()
	File_card_reward_proto = out.File
	file_card_reward_proto_rawDesc = nil
	file_card_reward_proto_goTypes = nil
	file_card_reward_proto_depIdxs = nil
}
