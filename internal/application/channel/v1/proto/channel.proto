syntax = "proto3";


option go_package = "pickrewardapi/api/channel/proto";
// option java_multiple_files = true;
// option java_package = "io.grpc.examples.helloworld";
// option java_outer_classname = "HelloWorldProto";

package channel.v1;

// The greeting service definition.
service ChannelV1 {

  rpc GetShowLabels (EmptyReq) returns (ShowLabelsReply){}
  rpc GetChannelsByShowLabel (ShowLabelReq) returns (ChannelsReply){}
  rpc GetsByChannelIDs(ChannelIDsReq) returns(ChannelsReply) {}
  rpc SearchChannel(SearchChannelReq) returns (SearchChannelsReply) {}
}

message EmptyReq{}

message Reply {
  int32 status = 1;
  Error error = 2;
}


message Error {
  int32 errorCode = 1;
  string errorMessage = 2;
}


message ChannelIDsReq{
  repeated string channelIDs = 1;
}

message ShowLabelReq {
  string label = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message ShowLabelsReply{

  message ChannelLabel {
    string label = 1;
    string name = 2;
    int32 order = 3;
  }
  
  Reply reply = 1;
  repeated ChannelLabel channelLabels = 2;

}


message ChannelsReply {


  message Channel{
    string id = 1;
    string name = 2;
    int64 createDate = 3;
    int64 updateDate = 4;
    repeated string channelLabels = 5;
    string showLabel = 6;
    int32 order = 7;
    int32 channelStatus = 8;
    string imageName = 9;
  }


  Reply reply = 1;
  repeated Channel channels = 2;
}




message SearchChannelReq{
  string keyword = 1;
}

message SearchChannelsReply{

 
  message Channel{
    string id = 1;
    string name = 2;
    int64 createDate = 3;
    int64 updateDate = 4;
    repeated string channelLabels = 5;
    string showLabel = 6;
    int32 order = 7;
    int32 channelStatus = 8;
    string imageName = 9;
  }

  Reply reply = 1;
  repeated Channel channels = 2;
}


